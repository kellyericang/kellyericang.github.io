{"version":3,"sources":["Card.js","Scoreboard.js","Board.js","serviceWorker.js","index.js"],"names":["Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","doggo","breed","fetch","response","json","obj","setState","message","getBreed","react_default","a","createElement","className","alt","src","Component","url","substring","lastIndexOf","search","hyphen","indexOf","Scoreboard","score","reels","Board","urlArray","breedArray","boardState","urls","urls2","slice","newBoardState","addBreeds","i","x","newState","column","Math","floor","random","getPreviousReel","getNextReel","console","log","winningLines","lineWin","totalWin","currentState","concat","addScore","src_Card_0","src_Scoreboard","_this2","renderScoreboard","onClick","document","querySelector","style","display","renderCard","checkWin","breeds","length","Boolean","window","location","hostname","match","ReactDOM","render","src_Board_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f9e3b4d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport 'tachyons';\r\nimport './Card.css';\r\n\r\nclass Card extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdoggo: \"\",\r\n\t\t\tbreed: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst response = await fetch('https://dog.ceo/api/breeds/image/random');\r\n\t\tconst obj = await response.json(); \r\n\r\n\t\tthis.setState({ \r\n\t\t\tdoggo: obj.message,\r\n\t\t\tbreed: getBreed(obj.message)\r\n\t\t});\r\n\t\t// console.log(`[${this.state.breed}]  state:`, this.state);\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\t// const {doggo, breed} = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"card w-20 bw0\">\r\n\t\t\t\t<img alt=\"\" src={this.props.doggo}/>\r\n\t\t\t\t<p>{this.props.breed}</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Card;\r\n\r\nfunction getBreed(url) {\r\n\tlet breed = url.substring(30, url.lastIndexOf(\"/\"));\r\n\r\n\t//removing hyphen and swapping words\r\n\tif(breed.search(\"-\") < 0) {\r\n\t\t// console.log(`[${breed}]  not swapping`);\r\n\t\treturn breed;\r\n\t} else {\r\n\t\t// console.log(`[${breed}]  swapping words`);\r\n\t\tlet hyphen = breed.indexOf(\"-\");\r\n\t\treturn breed.substring(hyphen+1) + \" \" + breed.substring(0,hyphen);\r\n\t}\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nclass Scoreboard extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tscore: 0\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"scoreboard\">Score: {this.props.score}</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Scoreboard;\r\n","import React, {Component} from 'react';\r\nimport Card from './Card';\r\nimport Scoreboard from './Scoreboard';\r\nimport './Board.css';\r\nconst   reel0 = [10,9,2,4,8,5,7,9,4,6,3,8,5,9,1,3,6,7,5,0,8,9,2,7,5,10,6,8,4,3,1,6],\r\n\t\treel1 = [9,3,1,4,7,9,2,6,8,1,4,9,2,0,6,5,7,8,4,3,10,9,6,7,8,5,3,9,1,2,7,8],\r\n\t\treel2 = [2,6,5,10,7,9,6,2,4,8,1,3,6,9,7,4,5,8,9,3,2,4,8,7,5,0,3,8,6,7,9,1],\r\n\t\treel3 = [2,7,0,10,6,8,7,4,1,5,8,9,4,7,6,2,9,8,3,4,7,5,6,3,8,9,5,2,4,1,9,8],\r\n\t\treel4 = [8,10,1,2,7,4,6,8,3,7,4,2,6,1,9,5,4,2,0,6,3,9,5,2,8,6,1,9,4,5,7,3];\r\n\r\nconst reels = [reel0, reel1, reel2, reel3, reel4];\r\n\r\nclass Board extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tscore: 10000,\r\n\t\t\turlArray: [],\r\n\t\t\tbreedArray: [],\r\n\t\t\tboardState: []\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst response = await fetch('https://dog.ceo/api/breeds/image/random/11');\r\n\t\tconst obj = await response.json(); \r\n\r\n\t\tvar urls = obj.message;\r\n\t\tvar urls2 = obj.message.slice(0);\r\n\r\n\t\tthis.newBoardState();\r\n\r\n\t\tthis.setState({\r\n\t\t\turlArray: urls,\r\n\t\t\tbreedArray: addBreeds(urls2)\r\n\t\t});\r\n\t}\r\n\r\n\tnewBoardState() {\r\n\t\tlet newState = [];\r\n\t\tlet i, x, column = 1;\r\n\t\tfor(i=0; i<5; i++){\r\n\t\t\tx = Math.floor(Math.random()*32);\r\n\t\t\tnewState[column - 1] = reels[i][getPreviousReel(x)];\r\n\t\t\tnewState[column] = reels[i][x];\r\n\t\t\tnewState[column + 1] = reels[i][getNextReel(x)];\r\n\t\t\tcolumn += 3;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tboardState: newState\r\n\t\t});\r\n\r\n\t}\r\n\r\n\taddScore(i) {\r\n\t\tconsole.log(\"score added:\", i);\r\n\t\tthis.setState({\r\n\t\t\tscore: this.state.score + i\r\n\t\t})\r\n\t\t// console.log(`new score ${this.state.score}`)\r\n\t\t\r\n\t}\r\n\r\n\tcheckWin(){\r\n\t\tconst winningLines = [\r\n\t\t\t[1,4,7,10,13],\r\n\t\t\t[0,3,6,9,12],\r\n\t\t\t[2,5,8,11,14],\r\n\t\t\t[0,4,8,10,12],\r\n\t\t\t[2,4,6,10,14],\r\n\t\t\t[2,5,7,9,12],\r\n\t\t\t[0,3,7,11,14],\r\n\t\t\t[1,5,7,9,13],\r\n\t\t\t[1,3,7,11,13],\r\n\t\t\t[2,4,7,10,12],\r\n\t\t\t[0,4,7,10,14],\r\n\t\t\t[1,5,8,10,12],\r\n\t\t\t[1,3,6,10,14],\r\n\t\t\t[1,4,8,10,12],\r\n\t\t\t[1,4,6,10,14]\r\n\t\t]\r\n\t\tlet i=0, lineWin=0, totalWin=0;\r\n\t\tlet currentState = this.state.boardState.slice(0);\r\n\t\tfor(i=0; i<15; i++) {\r\n\t\t\tif (currentState[winningLines[i][0]] !== currentState[winningLines[i][1]]) continue;\r\n\t\t\telse if (currentState[winningLines[i][1]] !== currentState[winningLines[i][2]]) continue; \r\n\t\t\telse {\r\n\t\t\t\tlineWin = 5;\r\n\t\t\t\tif (currentState[winningLines[i][0]] === currentState[winningLines[i][3]]) {\r\n\t\t\t\t\tlineWin = 10;\r\n\t\t\t\t\tif (currentState[winningLines[i][0]] === currentState[winningLines[i][4]]) lineWin = 15;\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(lineWin !== 0) console.log(`won ${lineWin} on line ${i}`)\r\n\t\t\ttotalWin = totalWin + lineWin;\r\n\t\t\tlineWin = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (totalWin !== 0) this.addScore(totalWin);\r\n\t}\r\n\r\n\trenderCard(i) {\r\n\t\tlet x = this.state.boardState[i];\r\n\t    return (\r\n\t      <Card \r\n\t        // breed={this.state.breedArray[x]}\r\n\t        breed={x}\r\n\t        doggo={this.state.urlArray[x]}\r\n\t      />\r\n\t    );\r\n\t  }\r\n\r\n\trenderScoreboard(){\r\n\t\treturn (\r\n\t\t\t<Scoreboard score={this.state.score} />\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\t// console.log(\"current state:\", this.state.boardState);\r\n\t\treturn (\r\n\t\t\t<div className=\"board\">\r\n\t\t\t\t<h1 className='tc garamond'>doggo slot machine</h1>\r\n\t\t\t\t{this.renderScoreboard()}\r\n\t\t\t\t<button className='startGameButton' \r\n\t\t\t\t\tonClick={() => {document.querySelector(\".cards\").style.display = \"grid\";\r\n\t\t\t\t\tdocument.querySelector(\".startGameButton\").style.display = \"none\";\r\n\t\t\t\t\tdocument.querySelector(\".spinButton\").style.display=\"inline\";\r\n\t\t\t\t\tdocument.querySelector(\".scoreboard\").style.display=\"inline\";\r\n\t\t\t\t\t}}>START GAME</button>\r\n\t\t\t\t<div className=\"cards\">\r\n\t\t\t\t\t{this.renderCard(0)}{this.renderCard(3)}{this.renderCard(6)}{this.renderCard(9)}{this.renderCard(12)}\r\n\t\t\t\t\t{this.renderCard(1)}{this.renderCard(4)}{this.renderCard(7)}{this.renderCard(10)}{this.renderCard(13)}\r\n\t\t\t\t\t{this.renderCard(2)}{this.renderCard(5)}{this.renderCard(8)}{this.renderCard(11)}{this.renderCard(14)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className='spinButton' onClick={() => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.newBoardState();\r\n\t\t\t\t\tthis.addScore(-1);\r\n\t\t\t\t\tthis.renderScoreboard();\r\n\t\t\t\t\tthis.checkWin();\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.renderScoreboard();\r\n\t\t\t\t\t\r\n\t\t\t\t}}>spin!</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Board;\r\n\r\nfunction addBreeds(breeds) {\r\n\tfor(let i=0; i<breeds.length; i++) {\r\n\t\tlet breed = breeds[i].substring(30, breeds[i].lastIndexOf(\"/\"));\r\n\r\n\t\t//removing hyphen and swapping words\r\n\t\tif(breed.search(\"-\") < 0) {\r\n\t\t\tbreeds[i] = breed;\r\n\t\t} else {\r\n\t\t\tlet hyphen = breed.indexOf(\"-\");\r\n\t\t\tbreeds[i] = breed.substring(hyphen+1) + \" \" + breed.substring(0,hyphen);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\treturn breeds;\r\n}\r\n\r\nfunction getPreviousReel(i){\r\n\tif(i === 0) {\r\n\t\treturn 31; \r\n\t} else {\r\n\t\treturn i - 1;\r\n\t}\r\n}\r\n\r\nfunction getNextReel(i){\r\n\tif(i === 31) {\r\n\t\treturn 0; \r\n\t} else {\r\n\t\treturn i + 1;\r\n\t}\r\n}\r\n\r\nfunction sleep(milliseconds) {\r\n  var start = new Date().getTime();\r\n  for (var i = 0; i < 1e7; i++) {\r\n    if ((new Date().getTime() - start) > milliseconds){\r\n      break;\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Board from './Board';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n\t<div>\r\n\t\t<Board />\r\n\t</div>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n/*** \r\n\r\ngrab 15 dogs from the online api database \r\nhave a set pattern for the reels \r\neach spin, rng 5 numbers (one for each reel) \r\neach rng number is the middle one for that reel \r\nmake above and below +- 1 \r\ngenerate the cards \r\n\r\nboard\r\n0 3 6 9  12\r\n1 4 7 10 13\r\n2 5 8 11 14\r\n\r\n***/"],"sourceRoot":""}